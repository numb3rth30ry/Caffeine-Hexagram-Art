{
  "Accordion": {
    "import": "@/components/ui/accordion",
    "desc": "A vertically stacked set of interactive headings that each reveal a section of content.",
    "exports": ["Accordion", "AccordionItem", "AccordionTrigger", "AccordionContent"],
    "asChildExports": ["AccordionTrigger"]
  },
  "AlertDialog": {
    "import": "@/components/ui/alert-dialog",
    "desc": "A modal dialog that interrupts the user with important content and expects a response.",
    "exports": [
      "AlertDialog",
      "AlertDialogPortal",
      "AlertDialogOverlay",
      "AlertDialogTrigger",
      "AlertDialogContent",
      "AlertDialogHeader",
      "AlertDialogFooter",
      "AlertDialogTitle",
      "AlertDialogDescription",
      "AlertDialogAction",
      "AlertDialogCancel"
    ],
    "asChildExports": ["AlertDialogTrigger"]
  },
  "Alert": {
    "import": "@/components/ui/alert",
    "desc": "Displays a callout for user attention.",
    "exports": ["Alert", "AlertTitle", "AlertDescription"],
    "exportVariants": {
      "Alert": {
        "variants": { "variant": ["default", "destructive"] },
        "defaultVariants": { "variant": "default" }
      }
    }
  },
  "AspectRatio": {
    "import": "@/components/ui/aspect-ratio",
    "desc": "Displays content within a desired ratio.",
    "exports": ["AspectRatio"]
  },
  "Avatar": {
    "import": "@/components/ui/avatar",
    "desc": "An image element with a fallback for representing the user.",
    "exports": ["Avatar", "AvatarImage", "AvatarFallback"]
  },
  "Badge": {
    "import": "@/components/ui/badge",
    "desc": "Displays a badge or a component that looks like a badge.",
    "exports": ["Badge", "badgeVariants"],
    "exportVariants": {
      "Badge": {
        "variants": { "variant": ["default", "outline", "secondary", "destructive"] },
        "defaultVariants": { "variant": "default" }
      }
    }
  },
  "Breadcrumb": {
    "import": "@/components/ui/breadcrumb",
    "desc": "Displays the path to the current resource using a hierarchy of links.",
    "exports": [
      "Breadcrumb",
      "BreadcrumbList",
      "BreadcrumbItem",
      "BreadcrumbLink",
      "BreadcrumbPage",
      "BreadcrumbSeparator",
      "BreadcrumbEllipsis"
    ]
  },
  "Button": {
    "import": "@/components/ui/button",
    "desc": "Displays a button or a component that looks like a button.",
    "asChildExports": true,
    "exports": ["Button", "buttonVariants"],
    "exportVariants": {
      "Button": {
        "variants": {
          "variant": ["default", "secondary", "destructive", "outline", "ghost", "link"],
          "size": ["sm", "default", "lg", "icon"]
        },
        "defaultVariants": { "variant": "default", "size": "default" }
      }
    }
  },
  "Calendar": {
    "import": "@/components/ui/calendar",
    "desc": "A date field component that allows users to enter and edit date.",
    "exports": ["Calendar", "CalendarDayButton"]
  },
  "Card": {
    "import": "@/components/ui/card",
    "desc": "Displays a card with header, content, and footer.",
    "exports": ["Card", "CardHeader", "CardFooter", "CardTitle", "CardAction", "CardDescription", "CardContent"]
  },
  "Carousel": {
    "import": "@/components/ui/carousel",
    "desc": "A carousel with motion and swipe built using Embla.",
    "exports": ["Carousel", "CarouselContent", "CarouselItem", "CarouselPrevious", "CarouselNext"]
  },
  "Chart": {
    "import": "@/components/ui/chart",
    "desc": "Beautiful charts. Built using Recharts. Copy and paste into your apps.",
    "exports": [
      "ChartContainer",
      "ChartTooltip",
      "ChartTooltipContent",
      "ChartLegend",
      "ChartLegendContent",
      "ChartStyle"
    ]
  },
  "Checkbox": {
    "import": "@/components/ui/checkbox",
    "desc": "A control that allows the user to toggle between checked and not checked.",
    "exports": ["Checkbox"]
  },
  "Collapsible": {
    "import": "@/components/ui/collapsible",
    "desc": "An interactive component which expands/collapses a panel.",
    "exports": ["Collapsible", "CollapsibleTrigger", "CollapsibleContent"]
  },
  "Command": {
    "import": "@/components/ui/command",
    "desc": "Fast, composable, unstyled command menu for React.",
    "exports": [
      "Command",
      "CommandDialog",
      "CommandInput",
      "CommandList",
      "CommandEmpty",
      "CommandGroup",
      "CommandItem",
      "CommandShortcut",
      "CommandSeparator"
    ]
  },
  "ContextMenu": {
    "import": "@/components/ui/context-menu",
    "desc": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
    "exports": [
      "ContextMenu",
      "ContextMenuTrigger",
      "ContextMenuContent",
      "ContextMenuItem",
      "ContextMenuCheckboxItem",
      "ContextMenuRadioItem",
      "ContextMenuLabel",
      "ContextMenuSeparator",
      "ContextMenuShortcut",
      "ContextMenuGroup",
      "ContextMenuPortal",
      "ContextMenuSub",
      "ContextMenuSubContent",
      "ContextMenuSubTrigger",
      "ContextMenuRadioGroup"
    ],
    "asChildExports": ["ContextMenuTrigger"]
  },
  "Dialog": {
    "import": "@/components/ui/dialog",
    "desc": "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert.",
    "exports": [
      "Dialog",
      "DialogTrigger",
      "DialogPortal",
      "DialogClose",
      "DialogOverlay",
      "DialogContent",
      "DialogHeader",
      "DialogFooter",
      "DialogTitle",
      "DialogDescription"
    ],
    "asChildExports": ["DialogTrigger"]
  },
  "Drawer": {
    "import": "@/components/ui/drawer",
    "desc": "A drawer component for React.",
    "exports": [
      "Drawer",
      "DrawerPortal",
      "DrawerOverlay",
      "DrawerTrigger",
      "DrawerClose",
      "DrawerContent",
      "DrawerHeader",
      "DrawerFooter",
      "DrawerTitle",
      "DrawerDescription"
    ],
    "asChildExports": ["DrawerTrigger"]
  },
  "DropdownMenu": {
    "import": "@/components/ui/dropdown-menu",
    "desc": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
    "exports": [
      "DropdownMenu",
      "DropdownMenuPortal",
      "DropdownMenuTrigger",
      "DropdownMenuContent",
      "DropdownMenuGroup",
      "DropdownMenuLabel",
      "DropdownMenuItem",
      "DropdownMenuCheckboxItem",
      "DropdownMenuRadioGroup",
      "DropdownMenuRadioItem",
      "DropdownMenuSeparator",
      "DropdownMenuShortcut",
      "DropdownMenuSub",
      "DropdownMenuSubTrigger",
      "DropdownMenuSubContent"
    ],
    "asChildExports": ["DropdownMenuTrigger"]
  },
  "Form": {
    "import": "@/components/ui/form",
    "desc": "React Hook Form helpers styled to match UI.",
    "exports": [
      "useFormField",
      "Form",
      "FormItem",
      "FormLabel",
      "FormControl",
      "FormDescription",
      "FormMessage",
      "FormField"
    ]
  },
  "HoverCard": {
    "import": "@/components/ui/hover-card",
    "desc": "For sighted users to preview content available behind a link.",
    "exports": ["HoverCard", "HoverCardTrigger", "HoverCardContent"],
    "asChildExports": ["HoverCardTrigger"]
  },
  "InputOTP": {
    "import": "@/components/ui/input-otp",
    "desc": "Accessible one-time password component with copy paste functionality.",
    "exports": ["InputOTP", "InputOTPGroup", "InputOTPSlot", "InputOTPSeparator"]
  },
  "Input": {
    "import": "@/components/ui/input",
    "desc": "Displays a form input field or a component that looks like an input field.",
    "exports": ["Input"]
  },
  "Label": {
    "import": "@/components/ui/label",
    "desc": "Renders an accessible label associated with controls.",
    "exports": ["Label"]
  },
  "Menubar": {
    "import": "@/components/ui/menubar",
    "desc": "A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.",
    "exports": [
      "Menubar",
      "MenubarPortal",
      "MenubarMenu",
      "MenubarTrigger",
      "MenubarContent",
      "MenubarGroup",
      "MenubarSeparator",
      "MenubarLabel",
      "MenubarItem",
      "MenubarShortcut",
      "MenubarCheckboxItem",
      "MenubarRadioGroup",
      "MenubarRadioItem",
      "MenubarSub",
      "MenubarSubTrigger",
      "MenubarSubContent"
    ],
    "asChildExports": ["MenubarTrigger"]
  },
  "NavigationMenu": {
    "import": "@/components/ui/navigation-menu",
    "desc": "A collection of links for navigating websites.",
    "exports": [
      "NavigationMenu",
      "NavigationMenuList",
      "NavigationMenuItem",
      "NavigationMenuContent",
      "NavigationMenuTrigger",
      "NavigationMenuLink",
      "NavigationMenuIndicator",
      "NavigationMenuViewport",
      "navigationMenuTriggerStyle"
    ],
    "asChildExports": ["NavigationMenuTrigger"]
  },
  "Pagination": {
    "import": "@/components/ui/pagination",
    "desc": "Pagination with page navigation, next and previous links.",
    "exports": [
      "Pagination",
      "PaginationContent",
      "PaginationLink",
      "PaginationItem",
      "PaginationPrevious",
      "PaginationNext",
      "PaginationEllipsis"
    ]
  },
  "Popover": {
    "import": "@/components/ui/popover",
    "desc": "Displays rich content in a portal, triggered by a button.",
    "exports": ["Popover", "PopoverTrigger", "PopoverContent", "PopoverAnchor"],
    "asChildExports": ["PopoverTrigger"]
  },
  "Progress": {
    "import": "@/components/ui/progress",
    "desc": "Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.",
    "exports": ["Progress"]
  },
  "RadioGroup": {
    "import": "@/components/ui/radio-group",
    "desc": "A set of checkable buttons—known as radio buttons—where no more than one of the buttons can be checked at a time.",
    "exports": ["RadioGroup", "RadioGroupItem"]
  },
  "Resizable": {
    "import": "@/components/ui/resizable",
    "desc": "Accessible resizable panel groups and layouts with keyboard support.",
    "exports": ["ResizablePanelGroup", "ResizablePanel", "ResizableHandle"]
  },
  "ScrollArea": {
    "import": "@/components/ui/scroll-area",
    "desc": "Augments native scroll functionality for custom, cross-browser styling.",
    "exports": ["ScrollArea", "ScrollBar"]
  },
  "Select": {
    "import": "@/components/ui/select",
    "desc": "Displays a list of options for the user to pick from—triggered by a button.",
    "exports": [
      "Select",
      "SelectContent",
      "SelectGroup",
      "SelectItem",
      "SelectLabel",
      "SelectScrollDownButton",
      "SelectScrollUpButton",
      "SelectSeparator",
      "SelectTrigger",
      "SelectValue"
    ],
    "asChildExports": ["SelectTrigger"]
  },
  "Separator": {
    "import": "@/components/ui/separator",
    "desc": "Visually or semantically separates content.",
    "exports": ["Separator"]
  },
  "Sheet": {
    "import": "@/components/ui/sheet",
    "desc": "Extends the Dialog component to display content that complements the main content of the screen.",
    "exports": [
      "Sheet",
      "SheetTrigger",
      "SheetClose",
      "SheetContent",
      "SheetHeader",
      "SheetFooter",
      "SheetTitle",
      "SheetDescription"
    ],
    "asChildExports": ["SheetTrigger"]
  },
  "Sidebar": {
    "import": "@/components/ui/sidebar",
    "desc": "A composable, themeable and customizable sidebar component.",
    "exports": [
      "Sidebar",
      "SidebarContent",
      "SidebarFooter",
      "SidebarGroup",
      "SidebarGroupAction",
      "SidebarGroupContent",
      "SidebarGroupLabel",
      "SidebarHeader",
      "SidebarInput",
      "SidebarInset",
      "SidebarMenu",
      "SidebarMenuAction",
      "SidebarMenuBadge",
      "SidebarMenuButton",
      "SidebarMenuItem",
      "SidebarMenuSkeleton",
      "SidebarMenuSub",
      "SidebarMenuSubButton",
      "SidebarMenuSubItem",
      "SidebarProvider",
      "SidebarRail",
      "SidebarSeparator",
      "SidebarTrigger",
      "useSidebar"
    ],
    "exportVariants": {
      "SidebarMenuButton": {
        "variants": { "variant": ["default", "outline"], "size": ["default", "sm", "lg"] },
        "defaultVariants": { "variant": "default", "size": "default" }
      }
    }
  },
  "Skeleton": {
    "import": "@/components/ui/skeleton",
    "desc": "Use to show a placeholder while content is loading.",
    "exports": ["Skeleton"]
  },
  "Slider": {
    "import": "@/components/ui/slider",
    "desc": "An input where the user selects a value from within a given range.",
    "exports": ["Slider"]
  },
  "Sonner": {
    "import": "@/components/ui/sonner",
    "desc": "An opinionated toast component for React.",
    "exports": ["Toaster"]
  },
  "Switch": {
    "import": "@/components/ui/switch",
    "desc": "A control that allows the user to toggle between checked and not checked.",
    "exports": ["Switch"]
  },
  "Table": {
    "import": "@/components/ui/table",
    "desc": "A responsive table component.",
    "exports": [
      "Table",
      "TableHeader",
      "TableBody",
      "TableFooter",
      "TableHead",
      "TableRow",
      "TableCell",
      "TableCaption"
    ]
  },
  "Tabs": {
    "import": "@/components/ui/tabs",
    "desc": "A set of layered sections of content—known as tab panels—that are displayed one at a time.",
    "exports": ["Tabs", "TabsList", "TabsTrigger", "TabsContent"],
    "asChildExports": ["TabsTrigger"]
  },
  "Textarea": {
    "import": "@/components/ui/textarea",
    "desc": "Displays a form textarea or a component that looks like a textarea.",
    "exports": ["Textarea"]
  },
  "ToggleGroup": {
    "import": "@/components/ui/toggle-group",
    "desc": "A set of two-state buttons that can be toggled on or off.",
    "exports": ["ToggleGroup", "ToggleGroupItem"]
  },
  "Toggle": {
    "import": "@/components/ui/toggle",
    "desc": "A two-state button that can be on or off.",
    "exports": ["Toggle", "toggleVariants"],
    "exportVariants": {
      "Toggle": {
        "variants": {
          "variant": ["default", "outline"],
          "size": ["sm", "default", "lg"]
        },
        "defaultVariants": { "variant": "default", "size": "default" }
      }
    }
  },
  "Tooltip": {
    "import": "@/components/ui/tooltip",
    "desc": "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",
    "exports": ["Tooltip", "TooltipTrigger", "TooltipContent", "TooltipProvider"],
    "asChildExports": ["TooltipTrigger"]
  }
}
